import { store } from '@features/store';
import { NavigatorScreenParams, RouteProp } from '@react-navigation/native';
import { StackNavigationProp } from '@react-navigation/stack';

export type ColorType = { [key: string]: string };

export type MainStackParamsList = {
  Home: undefined;
  WebPage: { bookPreviewLink: string } | undefined;
};

export type AuthStackParamsList = {
  Welcome: undefined;
  'Sign Up': undefined;
  'Sign In': undefined;
};

export type RootStackParamsList = {
  Auth: undefined;
  Main: undefined;
};

export type WebScreenProps = {
  route: RouteProp<MainStackParamsList, 'WebPage'>;
};

export type HomeScreenProps = {
  navigation: StackNavigationProp<MainStackParamsList, 'Home'>;
};

export type HeaderCompProps = {
  height: number;
};

export type BookViewProps = {
  navigation: BookViewRenderItemProps['navigation'];
};

export type BookViewRenderItemProps = {
  item: Item;
  navigation: StackNavigationProp<MainStackParamsList, 'Home'>;
};

//store types
export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;

// Generated by https://quicktype.io

export interface Book {
  kind: string;
  totalItems: number;
  items: Item[];
}

export interface Item {
  kind: Kind;
  id: string;
  etag: string;
  selfLink: string;
  volumeInfo: VolumeInfo;
  saleInfo: SaleInfo;
  accessInfo: AccessInfo;
  searchInfo: SearchInfo;
}

export interface AccessInfo {
  country: string;
  viewability: string;
  embeddable: boolean;
  publicDomain: boolean;
  textToSpeechPermission: string;
  epub: Epub;
  pdf: PDF;
  webReaderLink: string;
  accessViewStatus: string;
  quoteSharingAllowed: boolean;
}

export interface Epub {
  isAvailable: boolean;
  acsTokenLink?: string;
  downloadLink?: string;
}

export interface PDF {
  isAvailable: boolean;
  acsTokenLink?: string;
}

export interface Kind {
  BooksVolume: string;
}

export interface SaleInfo {
  country: string;
  saleability: string;
  isEbook: boolean;
  buyLink?: string;
}

export interface SearchInfo {
  textSnippet: string;
}

export interface VolumeInfo {
  title: string;
  subtitle?: string;
  authors?: string[];
  publishedDate: string;
  description?: string;
  industryIdentifiers: IndustryIdentifier[];
  readingModes: ReadingModes;
  pageCount?: number;
  printType: string;
  categories?: string[];
  maturityRating: string;
  allowAnonLogging: boolean;
  contentVersion: string;
  panelizationSummary: PanelizationSummary;
  imageLinks: ImageLinks;
  language: string;
  previewLink: string;
  infoLink: string;
  canonicalVolumeLink: string;
  publisher?: string;
}

export interface ImageLinks {
  smallThumbnail: string;
  thumbnail: string;
}

export interface IndustryIdentifier {
  type: Type;
  identifier: string;
}

export interface Type {
  Isbn10: string;
  Isbn13: string;
  Other: string;
}

export interface PanelizationSummary {
  containsEpubBubbles: boolean;
  containsImageBubbles: boolean;
}

export interface ReadingModes {
  text: boolean;
  image: boolean;
}
